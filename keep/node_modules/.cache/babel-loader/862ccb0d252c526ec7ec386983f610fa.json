{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\src\\\\components\\\\note.js\";\nimport React from 'react';\nimport '../styles/note.css';\nimport '../styles/notes.css';\nimport archive from \"../icons/archive.svg\";\nimport deleteIcon from \"../icons/delete.svg\";\n\nfunction Note({\n  note,\n  noteActions,\n  isArchived,\n  openNote,\n  style,\n  darkMode\n}) {\n  const clicked = e => {\n    e.stopPropagation();\n    openNote({\n      id: note.id,\n      isNew: false,\n      isArchived\n    });\n  };\n\n  const styleIcon1 = darkMode ? {\n    filter: \"invert(0)\"\n  } : {\n    filter: \"invert(0.6)\"\n  };\n  const styleIcon2 = darkMode ? {\n    filter: \"invert(1)\"\n  } : {\n    filter: \"invert(0.4)\"\n  };\n  const classVal = \"note--container \" + (darkMode ? \"note--container-dark\" : \"note--container-light\");\n  return React.createElement(\"div\", {\n    className: classVal,\n    onClick: e => clicked(e),\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, note.title.length === 0 ? \"Untitled\" : note.title), React.createElement(\"p\", {\n    style: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, note.description), React.createElement(\"div\", {\n    className: \"note--actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, isArchived ? React.createElement(\"div\", {\n    className: \"unArchive\",\n    style: styleIcon1,\n    onClick: e => noteActions(e, note.id, 'unarchive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"archive\",\n    style: _objectSpread({\n      backgroundImage: `url(${archive})`\n    }, styleIcon2),\n    onClick: e => noteActions(e, note.id, 'archive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), !isArchived ? React.createElement(\"div\", {\n    className: \"pin\",\n    style: note.isPinned ? _objectSpread({\n      transform: \"rotate(180deg)\"\n    }, styleIcon1) : styleIcon1,\n    onClick: e => noteActions(e, note.id, 'togglepin'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"delete\",\n    style: _objectSpread({\n      backgroundImage: `url(${deleteIcon})`\n    }, styleIcon2),\n    onClick: e => noteActions(e, note.id, 'delete'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n}\n\nexport default Note;","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/src/components/note.js"],"names":["React","Note","note","noteActions","isArchived","openNote","style","darkMode","clicked","e","stopPropagation","id","isNew","styleIcon1","filter","styleIcon2","classVal","overflow","textOverflow","title","length","description","backgroundImage","archive","isPinned","transform","deleteIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/note.css';\nimport '../styles/notes.css';\nimport archive from '../icons/archive.svg'\nimport deleteIcon from '../icons/delete.svg'\n\nfunction Note({ note, noteActions, isArchived, openNote, style, darkMode }) {\n    const clicked = (e) => {\n        e.stopPropagation()\n        openNote({ id: note.id, isNew: false, isArchived })\n    }\n    const styleIcon1 = darkMode ? { filter: \"invert(0)\" } : { filter: \"invert(0.6)\" }\n    const styleIcon2 = darkMode ? { filter: \"invert(1)\" } : { filter: \"invert(0.4)\" }\n    const classVal = \"note--container \" + (darkMode ? \"note--container-dark\" : \"note--container-light\")\n    return (\n        <div className={classVal}\n            onClick={e => clicked(e)}\n            style={style}>\n            <h3 style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>{note.title.length === 0 ? \"Untitled\" : note.title}</h3>\n            <p style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }} >{note.description}</p>\n            <div className=\"note--actions\">\n                {isArchived\n                    ? <div\n                        className=\"unArchive\"\n                        style={styleIcon1}\n                        onClick={e => noteActions(e, note.id, 'unarchive')}></div>\n                    : <div\n                        className=\"archive\"\n                        style={{ backgroundImage: `url(${archive})`, ...styleIcon2 }}\n                        onClick={e => noteActions(e, note.id, 'archive')}></div>}\n                {!isArchived ? <div\n                    className=\"pin\"\n                    style={note.isPinned? { transform: \"rotate(180deg)\",...styleIcon1}: styleIcon1}\n                    onClick={e => noteActions(e, note.id, 'togglepin')}></div>: null}\n                <div\n                        className=\"delete\"\n                        style={{backgroundImage: `url(${deleteIcon})`,...styleIcon2} }\n                        onClick={e => noteActions(e, note.id, 'delete')}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}