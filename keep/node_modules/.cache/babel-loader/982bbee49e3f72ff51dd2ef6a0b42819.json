{"ast":null,"code":"/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\nfunction exclude() {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps(res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude() {\n    var args = [].slice.call(arguments),\n        i = 0,\n        res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n}\n\n;\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError(message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON'),\n      props = extend(_props || {}); // default values\n\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false; // copy from properties\n\n  for (var key in props) {\n    this[key] = props[key];\n  } // capture stack trace\n\n\n  ssf = ssf || arguments.callee;\n\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  }\n}\n/*!\n * Inherit from Error.prototype\n */\n\n\nAssertionError.prototype = Object.create(Error.prototype);\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack'),\n      props = extend({\n    name: this.name\n  }, this); // include stack if exists and not turned off\n\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/node_modules/assertion-error/index.js"],"names":["exclude","excludes","slice","call","arguments","excludeProps","res","obj","Object","keys","forEach","key","indexOf","extendExclude","args","i","length","module","exports","AssertionError","message","_props","ssf","extend","props","showDiff","callee","Error","captureStackTrace","prototype","create","name","constructor","toJSON","stack"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;AASA,SAASA,OAAT,GAAoB;AAClB,MAAIC,QAAQ,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAf;;AAEA,WAASC,YAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/BC,IAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,UAAUC,GAAV,EAAe;AACtC,UAAI,CAAC,CAACV,QAAQ,CAACW,OAAT,CAAiBD,GAAjB,CAAN,EAA6BL,GAAG,CAACK,GAAD,CAAH,GAAWJ,GAAG,CAACI,GAAD,CAAd;AAC9B,KAFD;AAGD;;AAED,SAAO,SAASE,aAAT,GAA0B;AAC/B,QAAIC,IAAI,GAAG,GAAGZ,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAX;AAAA,QACIW,CAAC,GAAG,CADR;AAAA,QAEIT,GAAG,GAAG,EAFV;;AAIA,WAAOS,CAAC,GAAGD,IAAI,CAACE,MAAhB,EAAwBD,CAAC,EAAzB,EAA6B;AAC3BV,MAAAA,YAAY,CAACC,GAAD,EAAMQ,IAAI,CAACC,CAAD,CAAV,CAAZ;AACD;;AAED,WAAOT,GAAP;AACD,GAVD;AAWD;;AAAA;AAED;;;;AAIAW,MAAM,CAACC,OAAP,GAAiBC,cAAjB;AAEA;;;;;;;;;;;AAWA,SAASA,cAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,GAA1C,EAA+C;AAC7C,MAAIC,MAAM,GAAGvB,OAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,aAA7B,EAA4C,QAA5C,CAApB;AAAA,MACIwB,KAAK,GAAGD,MAAM,CAACF,MAAM,IAAI,EAAX,CADlB,CAD6C,CAI7C;;AACA,OAAKD,OAAL,GAAeA,OAAO,IAAI,4BAA1B;AACA,OAAKK,QAAL,GAAgB,KAAhB,CAN6C,CAQ7C;;AACA,OAAK,IAAId,GAAT,IAAgBa,KAAhB,EAAuB;AACrB,SAAKb,GAAL,IAAYa,KAAK,CAACb,GAAD,CAAjB;AACD,GAX4C,CAa7C;;;AACAW,EAAAA,GAAG,GAAGA,GAAG,IAAIlB,SAAS,CAACsB,MAAvB;;AACA,MAAIJ,GAAG,IAAIK,KAAK,CAACC,iBAAjB,EAAoC;AAClCD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8BN,GAA9B;AACD;AACF;AAED;;;;;AAIAH,cAAc,CAACU,SAAf,GAA2BrB,MAAM,CAACsB,MAAP,CAAcH,KAAK,CAACE,SAApB,CAA3B;AAEA;;;;AAIAV,cAAc,CAACU,SAAf,CAAyBE,IAAzB,GAAgC,gBAAhC;AAEA;;;;AAIAZ,cAAc,CAACU,SAAf,CAAyBG,WAAzB,GAAuCb,cAAvC;AAEA;;;;;;;AAOAA,cAAc,CAACU,SAAf,CAAyBI,MAAzB,GAAkC,UAAUC,KAAV,EAAiB;AACjD,MAAIX,MAAM,GAAGvB,OAAO,CAAC,aAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAApB;AAAA,MACIwB,KAAK,GAAGD,MAAM,CAAC;AAAEQ,IAAAA,IAAI,EAAE,KAAKA;AAAb,GAAD,EAAsB,IAAtB,CADlB,CADiD,CAIjD;;AACA,MAAI,UAAUG,KAAV,IAAmB,KAAKA,KAA5B,EAAmC;AACjCV,IAAAA,KAAK,CAACU,KAAN,GAAc,KAAKA,KAAnB;AACD;;AAED,SAAOV,KAAP;AACD,CAVD","sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n"]},"metadata":{},"sourceType":"script"}