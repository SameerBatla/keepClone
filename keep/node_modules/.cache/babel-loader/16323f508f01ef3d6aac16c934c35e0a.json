{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\src\\\\containers\\\\searchResult.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchNotes } from '../actions/searchActions';\nimport { setTitle } from '../actions/settingsAction';\nimport Note from '../components/note';\n\nclass SearchResult extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getSearchTerm = () => {\n      const searchTerms = this.props.location.search.split('?key=');\n      const searchTerm = searchTerms.length > 1 ? searchTerms[1] : '';\n      return decodeURI(searchTerm);\n    };\n\n    this.openNote = ({\n      id,\n      isNew,\n      isArchived\n    }) => {\n      this.props.history.push(isArchived ? `/archived?note=${id}` : `/?note=${id}`);\n    };\n  }\n\n  componentDidMount() {\n    const searchNotes = this.props.searchNotes;\n    searchNotes(this.getSearchTerm());\n    this.props.setTitle(\"Search\");\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const searchNotes = this.props.searchNotes;\n      searchNotes(this.getSearchTerm());\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          search = _this$props.search,\n          settings = _this$props.settings;\n    const cardStyle = {\n      backgroundColor: settings.bgColor,\n      color: settings.fontColor,\n      border: \"1px solid #e5e5e5\"\n    };\n    const pinnedNotes = Object.keys(search).filter(note => search[note].isArchived);\n    const notPinnedNotes = Object.keys(search).filter(note => !search[note].isArchived);\n\n    if (Object.keys(search).length > 0) {\n      return React.createElement(\"div\", {\n        id: \"search\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, pinnedNotes.length !== 0 ? React.createElement(\"div\", {\n        className: \"notes-super-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"heading\",\n        style: {\n          color: cardStyle.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Archived Notes\"), React.createElement(\"div\", {\n        className: \"notes--container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, pinnedNotes.map((note, index) => React.createElement(Note, {\n        key: index,\n        style: cardStyle,\n        isArchived: true,\n        note: search[note],\n        openNote: this.openNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })))) : null, React.createElement(\"div\", {\n        className: \"notes-super-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"heading\",\n        style: {\n          color: cardStyle.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, notPinnedNotes.length ? \"Notes\" : \"\"), React.createElement(\"div\", {\n        className: \"notes--container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, notPinnedNotes.map((note, index) => React.createElement(Note, {\n        key: index,\n        note: search[note],\n        openNote: this.openNote,\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"notes-super-container\",\n        id: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"heading\",\n        style: {\n          color: cardStyle.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Whoops nothing to see here... \"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nconst mapDispatchToProps = dispatch => ({\n  searchNotes: searchTerm => dispatch(searchNotes(searchTerm)),\n  setTitle: title => dispatch(setTitle(title))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/src/containers/searchResult.js"],"names":["React","connect","searchNotes","setTitle","Note","SearchResult","Component","getSearchTerm","searchTerms","props","location","search","split","searchTerm","length","decodeURI","openNote","id","isNew","isArchived","history","push","componentDidMount","componentDidUpdate","prevProps","render","settings","cardStyle","backgroundColor","bgColor","color","fontColor","border","pinnedNotes","Object","keys","filter","note","notPinnedNotes","width","map","index","mapStateToProps","state","mapDispatchToProps","dispatch","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { searchNotes } from '../actions/searchActions';\nimport {setTitle } from '../actions/settingsAction'\n\nimport Note from '../components/note';\n\nclass SearchResult extends React.Component {\n    componentDidMount() {\n        const { searchNotes } = this.props;\n        searchNotes(this.getSearchTerm());\n        this.props.setTitle(\"Search\");\n    }\n\n    getSearchTerm = () => {\n        const searchTerms = this.props.location.search.split('?key=');\n        const searchTerm = searchTerms.length > 1 ? searchTerms[1] : '';\n        return decodeURI(searchTerm);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location.search !== this.props.location.search) {\n            const { searchNotes } = this.props;\n            searchNotes(this.getSearchTerm());\n        }\n    }\n\n    openNote = ({ id, isNew, isArchived }) => {\n        this.props.history.push(isArchived ? `/archived?note=${id}` : `/?note=${id}`);\n    }\n\n    render() {\n        const { search, settings } = this.props;\n        const cardStyle = {\n            backgroundColor: settings.bgColor,\n            color: settings.fontColor,\n            border: \"1px solid #e5e5e5\"\n        };\n        const pinnedNotes = Object.keys(search).filter((note) => search[note].isArchived)\n        const notPinnedNotes = Object.keys(search).filter((note) => !search[note].isArchived)\n        if (Object.keys(search).length > 0) {\n            return (\n                <div id=\"search\" style={{width: \"100%\"}} >\n                    {pinnedNotes.length !== 0 ? <div className=\"notes-super-container\">\n                        <span className=\"heading\" style={{ color: cardStyle.color }}>{\"Archived Notes\"}</span>\n                        <div className=\"notes--container\">\n                            {pinnedNotes.map((note, index) =>\n                                <Note key={index} style={cardStyle}\n                                    isArchived={true}\n                                    note={search[note]}\n                                    openNote={this.openNote}\n                                />)}\n                        </div>\n                    </div> : null}\n                    <div className=\"notes-super-container\">\n                        <span className=\"heading\" style={{ color: cardStyle.color }}>\n                            {notPinnedNotes.length?\"Notes\": \"\"}</span>\n                        <div className=\"notes--container\">\n                            {notPinnedNotes.map((note, index) =>\n                                <Note key={index}\n                                    note={search[note]}\n                                    openNote={this.openNote}\n                                    style={cardStyle} />)}\n                        </div>\n                    </div>\n\n                </div>\n            )\n        } else {\n            return <div className=\"notes-super-container\" id=\"search\">\n                <span className=\"heading\" style={{ color: cardStyle.color }}>{\"Whoops nothing to see here... \"}</span>\n            </div>\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    searchNotes: (searchTerm) => dispatch(searchNotes(searchTerm)),\n    setTitle: (title) => dispatch(setTitle(title))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);\n"]},"metadata":{},"sourceType":"module"}