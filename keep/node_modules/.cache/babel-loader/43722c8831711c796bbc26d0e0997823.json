{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { simpleAction } from './actions/simpleAction';\nimport Notes from './containers/notes';\nimport SearchResult from './containers/searchResult';\nimport Sidebar from './components/sidebar';\nimport { initNotes } from './apis/notesApi';\nimport './App.css';\nimport Header from './components/header';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sidebarVisible: false,\n      showView: false\n    };\n\n    this.simpleAction = event => {\n      this.props.simpleAction();\n    };\n\n    this.toggleSidebar = () => this.setState(prevState => ({\n      sidebarVisible: !prevState.sidebarVisible\n    }));\n  }\n\n  componentDidMount() {\n    initNotes();\n    this.setState({\n      showView: true\n    });\n    window.addEventListener('click', e => {\n      if (document.getElementById(\"sidebar\")) {\n        if (!document.getElementById(\"sidebar\").contains(e.target)) {\n          this.setState(prevState => ({\n            sidebarVisible: false\n          }));\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state.showView) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          backgroundColor: this.props.settings.bgColor\n        },\n        onClick: this.closeSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props.settings, {\n        openSidebar: this.toggleSidebar,\n        closeSidebar: this.toggleSidebar,\n        sidebarVisible: this.state.sidebarVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({\n        sidebarVisible: this.state.sidebarVisible\n      }, this.props.settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/archived\",\n        component: Notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        component: SearchResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/src/App.js"],"names":["React","connect","BrowserRouter","Route","simpleAction","Notes","SearchResult","Sidebar","initNotes","Header","App","Component","state","sidebarVisible","showView","event","props","toggleSidebar","setState","prevState","componentDidMount","window","addEventListener","e","document","getElementById","contains","target","render","backgroundColor","settings","bgColor","closeSidebar","display","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { simpleAction } from './actions/simpleAction';\nimport Notes from './containers/notes';\nimport SearchResult from './containers/searchResult';\nimport Sidebar from './components/sidebar';\nimport { initNotes } from './apis/notesApi';\n\nimport './App.css';\nimport Header from './components/header';\n\nclass App extends React.Component {\n  state = {\n    sidebarVisible: false, \n    showView: false\n  };\n\n  componentDidMount() {\n    initNotes();\n    this.setState({showView: true})\n\n\n\n    window.addEventListener('click', (e) => {\n      if (document.getElementById(\"sidebar\")) {\n        if (!(document.getElementById(\"sidebar\").contains(e.target))) {\n          this.setState(prevState => ({ sidebarVisible: false }))\n        }\n      }\n    })\n  }\n\n  simpleAction = (event) => {\n    this.props.simpleAction();\n  }\n\n  toggleSidebar = () => this.setState(prevState => ({ sidebarVisible: !prevState.sidebarVisible }))\n\n\n\n  render() {\n    if(this.state.showView){\n    return (\n      <div className=\"App\" style={{ backgroundColor: this.props.settings.bgColor }} onClick={this.closeSidebar}>\n        <BrowserRouter>\n          <Header {...this.props.settings} openSidebar={this.toggleSidebar} closeSidebar={this.toggleSidebar}\n            sidebarVisible={this.state.sidebarVisible} />\n          <div style={{ display: \"flex\" }} >\n            <Sidebar  sidebarVisible={this.state.sidebarVisible} {...this.props.settings} />\n            {/* archived */}\n            <Route exact path=\"/archived\" component={Notes} />\n            {/* search result */}\n            <Route path=\"/search\" component={SearchResult} />\n            {/* notes */}\n            <Route exact path=\"/\" component={Notes} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n    } else {\n      return <div className=\"loader\"></div>\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}