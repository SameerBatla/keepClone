{"ast":null,"code":"/**\n * Self-contained short-life ID generating module\n *\n * Not guarenteed to be unique outside of a single instance of the module.\n */\nvar sechash = require('sechash');\n\nvar merge = require('merge-recursive');\n\nvar current = 0;\nvar storage = {};\nvar config = {\n  length: 6,\n  algorithm: 'sha1',\n  salt: Math.random,\n  useObjects: false\n};\n\nexports.configure = function (conf) {\n  Object.keys(conf).forEach(function (key) {\n    config[key] = conf[key];\n  });\n};\n\nexports.generate = function (conf) {\n  conf = merge({}, config, conf || {});\n  var key;\n  var salt = config.salt;\n\n  if (typeof salt === 'function') {\n    salt = salt();\n  }\n\n  do {\n    key = sechash.basicHash(config.algorithm, String(current++) + salt).slice(0, config.length);\n  } while (storage.hasOwnProperty(key));\n\n  storage[key] = null;\n\n  if (conf.useObjects) {\n    key = new exports.Id(key);\n  }\n\n  return key;\n};\n\nexports.invalidate = function (key) {\n  delete storage[keyValue(key)];\n};\n\nexports.store = function (value) {\n  var key = exports.generate();\n  storage[keyValue(key)] = value;\n  return key;\n};\n\nexports.fetch = function (key) {\n  return storage[keyValue(key)];\n};\n\nexports.fetchAndInvalidate = function (key) {\n  var value = exports.fetch(key);\n  exports.invalidate(key);\n  return value;\n}; // ------------------------------------------------------------------\n\n\nvar type = function (value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n};\n\nexports.isId = function (value) {\n  return type(value) === 'Object' && (value instanceof exports.Id || value._isShortIdObject);\n}; // ------------------------------------------------------------------\n\n\nexports.Id = function (id) {\n  if (!this instanceof exports.Id) {\n    return new exports.Id(id);\n  }\n\n  if (!id) {\n    id = exports.generate({\n      useObjects: false\n    });\n  }\n\n  Object.defineProperty(this, 'id', {\n    value: id,\n    writable: false,\n    enumerable: true\n  });\n};\n\nObject.defineProperty(exports.Id.prototype, '_isShortIdObject', {\n  value: true,\n  writable: false,\n  enumerable: false\n});\n\nexports.Id.prototype.toString = function () {\n  return this.id;\n}; // ------------------------------------------------------------------\n\n\nfunction keyValue(key) {\n  return exports.isId(key) ? String(key) : key;\n}","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/node_modules/short-id/lib/index.js"],"names":["sechash","require","merge","current","storage","config","length","algorithm","salt","Math","random","useObjects","exports","configure","conf","Object","keys","forEach","key","generate","basicHash","String","slice","hasOwnProperty","Id","invalidate","keyValue","store","value","fetch","fetchAndInvalidate","type","prototype","toString","call","isId","_isShortIdObject","id","defineProperty","writable","enumerable"],"mappings":"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","sourcesContent":["\n/**\n * Self-contained short-life ID generating module\n *\n * Not guarenteed to be unique outside of a single instance of the module.\n */\n\nvar sechash = require('sechash');\nvar merge   = require('merge-recursive');\n\nvar current = 0;\nvar storage = { };\nvar config = {\n\tlength: 6,\n\talgorithm: 'sha1',\n\tsalt: Math.random,\n\tuseObjects: false\n};\n\nexports.configure = function(conf) {\n\tObject.keys(conf).forEach(function(key) {\n\t\tconfig[key] = conf[key];\n\t});\n};\n\nexports.generate = function(conf) {\n\tconf = merge({ }, config, conf || { });\n\t\n\tvar key;\n\tvar salt = config.salt;\n\t\n\tif (typeof salt === 'function') {\n\t\tsalt = salt();\n\t}\n\t\n\tdo {\n\t\tkey = sechash.basicHash(config.algorithm, String(current++) + salt).slice(0, config.length);\n\t} while (storage.hasOwnProperty(key));\n\t\n\tstorage[key] = null;\n\t\n\tif (conf.useObjects) {\n\t\tkey = new exports.Id(key);\n\t}\n\t\n\treturn key;\n};\n\nexports.invalidate = function(key) {\n\tdelete storage[keyValue(key)];\n};\n\nexports.store = function(value) {\n\tvar key = exports.generate();\n\tstorage[keyValue(key)] = value;\n\treturn key;\n};\n\nexports.fetch = function(key) {\n\treturn storage[keyValue(key)];\n};\n\nexports.fetchAndInvalidate = function(key) {\n\tvar value = exports.fetch(key);\n\texports.invalidate(key);\n\treturn value;\n};\n\n// ------------------------------------------------------------------\n\nvar type = function(value) {\n\treturn Object.prototype.toString.call(value).slice(8, -1);\n};\n\nexports.isId = function(value) {\n\treturn (type(value) === 'Object' && (value instanceof exports.Id || value._isShortIdObject));\n};\n\n// ------------------------------------------------------------------\n\nexports.Id = function(id) {\n\tif (! this instanceof exports.Id) {\n\t\treturn new exports.Id(id);\n\t}\n\t\n\tif (! id) {\n\t\tid = exports.generate({ useObjects: false });\n\t}\n\t\n\tObject.defineProperty(this, 'id', {\n\t\tvalue: id,\n\t\twritable: false,\n\t\tenumerable: true\n\t});\n};\n\nObject.defineProperty(exports.Id.prototype, '_isShortIdObject', {\n\tvalue: true,\n\twritable: false,\n\tenumerable: false\n});\n\nexports.Id.prototype.toString = function() {\n\treturn this.id;\n};\n\n// ------------------------------------------------------------------\n\nfunction keyValue(key) {\n\treturn exports.isId(key) ? String(key) : key\n}\n\n"]},"metadata":{},"sourceType":"script"}