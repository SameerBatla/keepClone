{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst darkTheme = {\n  theme: \"dark\",\n  bgColor: \"#202123\",\n  fontColor: \"#f1f1f2\"\n};\nconst lightTheme = {\n  theme: \"light\",\n  bgColor: \"#fff\",\n  fontColor: \"#4d4d4d\"\n};\nconst darkMode = localStorage.getItem(\"theme\") === undefined ? false : localStorage.getItem(\"theme\") === \"dark\" ? true : false;\nconst currentTheme = darkMode ? darkTheme : lightTheme;\n\nconst initialState = _objectSpread({\n  darkMode,\n  title: \"Notes\"\n}, currentTheme);\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_THEME':\n      const theme = state.darkMode ? lightTheme : darkTheme;\n      localStorage.setItem(\"theme\", state.darkMode ? \"light\" : \"dark\");\n      return _objectSpread({}, state, {}, theme, {\n        darkMode: !state.darkMode\n      });\n\n    case 'SET_TITLE':\n      const newState = _objectSpread({}, state, {\n        title: action.payload\n      });\n\n      return newState;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/src/reducers/settingsReducer.js"],"names":["darkTheme","theme","bgColor","fontColor","lightTheme","darkMode","localStorage","getItem","undefined","currentTheme","initialState","title","state","action","type","setItem","newState","payload"],"mappings":";AACA,MAAMA,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,MADO;AAEdC,EAAAA,OAAO,EAAE,SAFK;AAGdC,EAAAA,SAAS,EAAE;AAHG,CAAlB;AAOA,MAAMC,UAAU,GAAG;AACfH,EAAAA,KAAK,EAAE,OADQ;AAEfC,EAAAA,OAAO,EAAE,MAFM;AAGfC,EAAAA,SAAS,EAAE;AAHI,CAAnB;AAKA,MAAME,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkCC,SAAlC,GAA8C,KAA9C,GAAsDF,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,MAAlC,GAA2C,IAA3C,GAAkD,KAAzH;AACA,MAAME,YAAY,GAAGJ,QAAQ,GAAGL,SAAH,GAAeI,UAA5C;;AACA,MAAMM,YAAY;AACdL,EAAAA,QADc;AAEdM,EAAAA,KAAK,EAAE;AAFO,GAGXF,YAHW,CAAlB;;AAMA,gBAAe,CAACG,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,YAAMb,KAAK,GAAGW,KAAK,CAACP,QAAN,GAAiBD,UAAjB,GAA8BJ,SAA5C;AACAM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BH,KAAK,CAACP,QAAN,GAAiB,OAAjB,GAA2B,MAAzD;AACA,+BAAYO,KAAZ,MAAsBX,KAAtB;AAA6BI,QAAAA,QAAQ,EAAE,CAACO,KAAK,CAACP;AAA9C;;AAEJ,SAAK,WAAL;AACI,YAAMW,QAAQ,qBAAQJ,KAAR;AAAeD,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAA7B,QAAd;;AACA,aAAOD,QAAP;;AACJ;AACI,aAAOJ,KAAP;AAVR;AAYH,CAbD","sourcesContent":["\nconst darkTheme = {\n    theme: \"dark\",\n    bgColor: \"#202123\",\n    fontColor: \"#f1f1f2\",\n\n}\n\nconst lightTheme = {\n    theme: \"light\",\n    bgColor: \"#fff\",\n    fontColor: \"#4d4d4d\",\n}\nconst darkMode = localStorage.getItem(\"theme\") === undefined ? false : localStorage.getItem(\"theme\") === \"dark\" ? true : false\nconst currentTheme = darkMode ? darkTheme : lightTheme\nconst initialState = {\n    darkMode,\n    title: \"Notes\",\n    ...currentTheme\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_THEME':\n            const theme = state.darkMode ? lightTheme : darkTheme\n            localStorage.setItem(\"theme\", state.darkMode ? \"light\" : \"dark\")\n            return { ...state, ...theme, darkMode: !state.darkMode };\n\n        case 'SET_TITLE':\n            const newState = { ...state, title: action.payload }\n            return newState\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}