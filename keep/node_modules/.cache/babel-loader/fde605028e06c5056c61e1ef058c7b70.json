{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sameer\\\\Desktop\\\\KeepClone\\\\keep\\\\src\\\\components\\\\header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport '../styles/header.css';\nimport { toggleTheme } from '../actions/settingsAction';\nimport cancel from '../icons/cancel.png';\nimport searchIcon from \"../icons/search.svg\";\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      focused: false,\n      showDarkModeNav: false,\n      showSearchNav: false\n    };\n\n    this.documentListener = e => {\n      if (!document.getElementById(\"setting-nav\").contains(e.target)) {\n        this.toggleDarkModeMenu();\n      }\n    };\n\n    this.toggleDarkModeMenu = e => {\n      if (this.state.showDarkModeNav) {\n        document.removeEventListener(\"click\", this.documentListener);\n      } else {\n        document.addEventListener(\"click\", this.documentListener);\n      }\n\n      this.setState(prevState => ({\n        showDarkModeNav: !prevState.showDarkModeNav\n      }));\n    };\n\n    this.handleToggleThemeNav = () => {\n      this.props.toggleTheme();\n      this.toggleDarkModeMenu(\"hello\");\n    };\n\n    this.handleSearch = e => {\n      const searchValue = e.target.value;\n      this.setState({\n        search: searchValue\n      });\n\n      if (searchValue.length) {\n        this.props.history.push(`/search?key=${searchValue}`);\n      } else {\n        this.props.history.push(`/`);\n      }\n    };\n\n    this.handleBlurNav = () => {\n      this.setState({\n        showSearchNav: false\n      });\n      this.handleBlur();\n    };\n\n    this.handleBlur = e => {\n      this.setState({\n        search: \"\"\n      });\n      this.props.history.push(`/`);\n    };\n  }\n\n  componentDidMount() {\n    const searchTerms = this.props.location.search.split('?key=');\n    const searchTerm = searchTerms.length > 1 ? searchTerms[1] : '';\n    this.setState({\n      search: decodeURI(searchTerm)\n    });\n  }\n\n  render() {\n    const _this$props$settings = this.props.settings,\n          bgColor = _this$props$settings.bgColor,\n          darkMode = _this$props$settings.darkMode,\n          title = _this$props$settings.title,\n          fontColor = _this$props$settings.fontColor;\n    const styleIcon1 = darkMode ? {\n      filter: \"invert(0)\"\n    } : {\n      filter: \"invert(0.6)\"\n    };\n    const styleIcon2 = darkMode ? {\n      filter: \"invert(1)\"\n    } : {\n      filter: \"invert(0.4)\"\n    };\n    return React.createElement(\"div\", {\n      onClick: this.props.closeSidebar,\n      style: {\n        borderBottom: \"1px solid #e5e5e5\"\n      },\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      style: {\n        backgroundColor: bgColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon icon-menu\",\n      style: {\n        color: fontColor\n      },\n      onClick: e => {\n        e.stopPropagation();\n        this.props.openSidebar();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: fontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: \"helper-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-container\" + (this.state.focused ? \" focused\" : \"\"),\n      style: {\n        borderColor: \"#e5e5e5\",\n        minWidth: \"300px\",\n        width: \"70%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search\",\n      style: {\n        width: \"90%\",\n        height: \"100%\"\n      },\n      onChange: this.handleSearch,\n      value: this.state.search,\n      onFocus: () => this.setState({\n        focused: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.state.search.length > 0 && React.createElement(\"img\", {\n      src: cancel,\n      onClick: this.handleBlur,\n      alt: \"cancel\",\n      className: \"cross\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        margin: \"0 20px\",\n        color: fontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Dark Mode\"), React.createElement(\"label\", {\n      className: \"switch\",\n      style: {\n        margin: \"-5px 0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: darkMode,\n      onChange: this.props.toggleTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"helper-container-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: _objectSpread({\n        backgroundImage: `url(${searchIcon})`\n      }, styleIcon2),\n      onClick: () => {\n        this.setState(prevState => ({\n          showSearchNav: !prevState.showSearchNav\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search-container\" + (this.state.focused ? \" focused\" : \"\"),\n      style: {\n        borderColor: \"#e5e5e5\",\n        minWidth: \"250px\",\n        display: this.state.showSearchNav ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search\",\n      style: {\n        width: \"80%\"\n      },\n      onChange: this.handleSearch,\n      value: this.state.search,\n      onFocus: () => this.setState({\n        focused: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), this.state.search.length > 0 && React.createElement(\"img\", {\n      src: cancel,\n      onClick: this.handleBlurNav,\n      alt: \"cancel\",\n      className: \"cross\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"settings dropdown\",\n      style: styleIcon1,\n      onClick: this.toggleDarkModeMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"setting-nav\",\n      className: \"dropdown-content\",\n      style: this.state.showDarkModeNav ? {\n        display: \"block\",\n        backgroundColor: bgColor\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        margin: \"0 20px\",\n        color: fontColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Dark Mode\"), React.createElement(\"label\", {\n      className: \"switch\",\n      style: {\n        margin: \"-5px 0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: darkMode,\n      onChange: this.handleToggleThemeNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider round\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTheme: () => dispatch(toggleTheme())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));","map":{"version":3,"sources":["C:/Users/Sameer/Desktop/KeepClone/keep/src/components/header.js"],"names":["React","connect","withRouter","toggleTheme","cancel","Header","Component","state","search","focused","showDarkModeNav","showSearchNav","documentListener","e","document","getElementById","contains","target","toggleDarkModeMenu","removeEventListener","addEventListener","setState","prevState","handleToggleThemeNav","props","handleSearch","searchValue","value","length","history","push","handleBlurNav","handleBlur","componentDidMount","searchTerms","location","split","searchTerm","decodeURI","render","settings","bgColor","darkMode","title","fontColor","styleIcon1","filter","styleIcon2","closeSidebar","borderBottom","backgroundColor","color","stopPropagation","openSidebar","borderColor","minWidth","width","height","margin","backgroundImage","searchIcon","display","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport '../styles/header.css';\nimport { toggleTheme } from '../actions/settingsAction'\nimport cancel from '../icons/cancel.png';\nimport searchIcon from '../icons/search.svg';\n\nclass Header extends React.Component {\n    state = {\n        search: '',\n        focused: false,\n        showDarkModeNav: false,\n        showSearchNav: false\n    }\n\n    documentListener = (e) => {\n        if (!document.getElementById(\"setting-nav\").contains(e.target)) {\n\n            this.toggleDarkModeMenu()\n        }\n    }\n\n    toggleDarkModeMenu = (e) => {\n        if (this.state.showDarkModeNav) {\n            document.removeEventListener(\"click\", this.documentListener)\n        } else {\n            document.addEventListener(\"click\", this.documentListener)\n        }\n        this.setState(prevState => ({ showDarkModeNav: !prevState.showDarkModeNav }))\n    }\n\n    componentDidMount() {\n        const searchTerms = this.props.location.search.split('?key=');\n        const searchTerm = searchTerms.length > 1 ? searchTerms[1] : '';\n        this.setState({ search: decodeURI(searchTerm) });\n    }\n    handleToggleThemeNav = () => {\n        this.props.toggleTheme()\n        this.toggleDarkModeMenu(\"hello\")\n    }\n    handleSearch = (e) => {\n        const searchValue = e.target.value;\n        this.setState({ search: searchValue });\n        if (searchValue.length) {\n            this.props.history.push(`/search?key=${searchValue}`);\n        } else {\n            this.props.history.push(`/`);\n        }\n    }\n\n    handleBlurNav = () => {\n        this.setState({ showSearchNav: false })\n        this.handleBlur()\n    }\n\n    handleBlur = (e) => {\n        this.setState({ search: \"\" })\n        this.props.history.push(`/`)\n    }\n\n    render() {\n\n        const { bgColor, darkMode, title, fontColor } = this.props.settings\n        const styleIcon1 = darkMode ? { filter: \"invert(0)\" } : { filter: \"invert(0.6)\" }\n        const styleIcon2 = darkMode ? { filter: \"invert(1)\" } : { filter: \"invert(0.4)\" }\n        return <div onClick={this.props.closeSidebar} style={{ borderBottom: \"1px solid #e5e5e5\" }} id=\"header\">\n            <div className=\"header\" style={{ backgroundColor: bgColor }}>\n                <div className=\"title\">\n                    <div className=\"icon icon-menu\" style={{ color: fontColor }} onClick={(e) => { e.stopPropagation(); this.props.openSidebar(); }}>\n                    </div>\n                    <span style={{ color: fontColor }}>{title}</span>\n                </div>\n                <div className=\"helper-container\" >\n                    <div className={\"search-container\" + (this.state.focused ? \" focused\" : \"\")}\n                        style={{\n                            borderColor: \"#e5e5e5\",\n                            minWidth: \"300px\", width: \"70%\"\n                        }}>\n                        <input placeholder=\"Search\"\n                            style={{ width: \"90%\", height: \"100%\" }}\n                            onChange={this.handleSearch}\n                            value={this.state.search}\n                            onFocus={() => this.setState({ focused: true })}\n                        />\n\n                        {this.state.search.length > 0 && <img src={cancel} onClick={this.handleBlur} alt=\"cancel\"\n                            className=\"cross\" />}\n                    </div>\n                    <label style={{ margin: \"10px\" }}>\n                        <span style={{ margin: \"0 20px\", color: fontColor }}>Dark Mode</span>\n                        <label className=\"switch\" style={{ margin: \"-5px 0 0 0\" }}>\n                            <input type=\"checkbox\" checked={darkMode} onChange={this.props.toggleTheme} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </label>\n                </div>\n                <div className=\"helper-container-nav\">\n                    <div\n                        style={{ backgroundImage: `url(${searchIcon})`, ...styleIcon2 }}\n                        onClick={() => { this.setState(prevState => ({ showSearchNav: !prevState.showSearchNav })) }}></div>\n                    <div className={\"search-container\" + (this.state.focused ? \" focused\" : \"\")}\n                        style={{\n                            borderColor: \"#e5e5e5\",\n                            minWidth: \"250px\",\n                            display: this.state.showSearchNav ? \"block\" : \"none\"\n                        }}>\n                        <input placeholder=\"Search\"\n                            style={{ width: \"80%\" }}\n                            onChange={this.handleSearch}\n                            value={this.state.search}\n                            onFocus={() => this.setState({ focused: true })}\n                        />\n\n                        {this.state.search.length > 0 && <img src={cancel} onClick={this.handleBlurNav} alt=\"cancel\"\n                            className=\"cross\" />}\n                    </div>\n                    <div\n                        className=\"settings dropdown\"\n                        style={styleIcon1}\n                        onClick={this.toggleDarkModeMenu}>\n                    </div>\n                    <div\n                        id=\"setting-nav\"\n                        className=\"dropdown-content\"\n                        style={this.state.showDarkModeNav ? { display: \"block\", backgroundColor: bgColor } : {}}>\n                        <label style={{ margin: \"10px\" }}>\n                            <span style={{ margin: \"0 20px\", color: fontColor }}>Dark Mode</span>\n                            <label className=\"switch\" style={{ margin: \"-5px 0 0 0\" }}>\n                                <input type=\"checkbox\" checked={darkMode} onChange={this.handleToggleThemeNav} />\n                                <span className=\"slider round\"></span>\n                            </label>\n                        </label>\n                    </div>\n\n                </div>\n            </div>\n\n\n        </div>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTheme: () => dispatch(toggleTheme()),\n\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\n"]},"metadata":{},"sourceType":"module"}